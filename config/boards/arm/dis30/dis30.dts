/*
 * Copyright (c) 2021 Nick Winans
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/led/led.h>
#include "dis30-layout.dtsi"

/ {
	model = "Dis30_B";
	compatible = "dis30,b";

	chosen {
        zephyr,display = &oled;
		zephyr,code-partition = &code_partition;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zmk,kscan = &kscan0;
        zmk,underglow = &led_strip;
		zephyr,console = &cdc_acm_uart;
		zmk,battery = &vbatt;
        zmk,physical-layout = &physical_layout0;
	};

	dis_all_transform: dis_all_transform {
		compatible = "zmk,matrix-transform";
		columns = <12>;
		rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
            RC(3,0) RC(3,1)         RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9)
        >;
    };

	kscan0: kscan {
		compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;
        label = "KSCAN";
		diode-direction = "col2row";
		row-gpios
			= <&gpio0 7  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 0
			, <&gpio1 10  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 1
			, <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 2
			, <&gpio1 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 3
			;
		col-gpios
			= <&gpio0 30  GPIO_ACTIVE_HIGH> // col 0
			, <&gpio0 29  GPIO_ACTIVE_HIGH> // col 1
			, <&gpio0 28 GPIO_ACTIVE_HIGH> // col 2
			, <&gpio0 2 GPIO_ACTIVE_HIGH> // col 3
			, <&gpio0 3 GPIO_ACTIVE_HIGH> // col 4
			, <&gpio1 15 GPIO_ACTIVE_HIGH> // col 5
			, <&gpio1 13  GPIO_ACTIVE_HIGH> // col 6
			, <&gpio0 10  GPIO_ACTIVE_HIGH> // col 7
			, <&gpio1 6  GPIO_ACTIVE_HIGH> // col 8
			, <&gpio0 9 GPIO_ACTIVE_HIGH> // col 9
			;
	};

    aliases {
		led-caps = &gpio_led_caps;
		led-usb = &gpio_led_usb;
		led-ble-0 = &gpio_led_ble_0;
        led-ble-1 = &gpio_led_ble_1;
        led-ble-2 = &gpio_led_ble_2;
    };

    leds {
        compatible = "gpio-leds";
        status = "okay";
        gpio_led_caps: led_caps {
            // gpios = <&gpio0 5 (GPIO_ACTIVE_HIGH)>;
            gpios = <&gpio0 16 (GPIO_ACTIVE_HIGH)>;
        };
        gpio_led_usb: led_usb {
            // gpios = <&gpio0 26 (GPIO_ACTIVE_HIGH)>;
            gpios = <&gpio0 13 (GPIO_ACTIVE_HIGH)>;
        };
        gpio_led_ble_0: led_ble_0 {
            gpios = <&gpio0 24 (GPIO_ACTIVE_HIGH)>;
        };
        gpio_led_ble_1: led_ble_1 {
            gpios = <&gpio0 20 (GPIO_ACTIVE_HIGH)>;
        };
        gpio_led_ble_2: led_ble_2 {
            gpios = <&gpio1 14 (GPIO_ACTIVE_HIGH)>;
        };
    };

	sensors { 
		compatible = "zmk,keymap-sensors";
		sensors = <&encoder1 &encoder2>;
	};

    encoder1: encoder1 {
        compatible = "alps,ec11";
        label = "ENCODER 1";
        a-gpios = <&gpio1 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 12  (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        resolution = <4>;
    };

    encoder2: encoder2 {
        compatible = "alps,ec11";
        label = "ENCODER 2";
        a-gpios = <&gpio1 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio1 3  (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        resolution = <4>;
    };

	ext-power {
		compatible = "zmk,ext-power-generic";
		label = "EXT_POWER";
		control-gpios = <&gpio0 4 GPIO_ACTIVE_HIGH>;
	};

	vbatt: vbatt {
		compatible = "zmk,battery-voltage-divider";
		label = "BATTERY";
		io-channels = <&adc 7>;
		output-ohms = <2000000>;
		full-ohms = <(2000000 + 820000)>;
	};
};

&adc {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&usbd {
	status = "okay";
	cdc_acm_uart: cdc_acm_uart {
		compatible = "zephyr,cdc-acm-uart";
		label = "CDC_ACM_0";
	};
};

&i2c0 {
    compatible = "nordic,nrf-twi";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
    status = "okay";

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        com-sequential;
        inversion-on;
        prechargep = <0x22>;
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <20>; /* number of LEDs */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN
                         LED_COLOR_ID_RED
                         LED_COLOR_ID_BLUE>;
    };
};

zephyr_udc0: &usbd {
    status = "okay";
};

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 5)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 5)>;
            low-power-enable;
        };
    };
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 15)>,
                <NRF_PSEL(TWIM_SCL, 0, 17)>;
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 15)>,
                <NRF_PSEL(TWIM_SCL, 0, 17)>;
            low-power-enable;
        };
    };
};

&flash0 {
	/*
	 * For more information, see:
	 * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
	 */
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		sd_partition: partition@0 {
			label = "mbr";
			reg = <0x00000000 0x00001000>;
		};

		code_partition: partition@1000 {
			label = "code_partition";
			reg = <0x00001000 0x000d3000>;
		};

		/*
		 * The flash starting at 0x000d4000 and ending at
		 * 0x000f3fff is reserved for use by the application.
		 */

		/*
		 * Storage partition will be used by FCB/LittleFS/NVS
		 * if enabled.
		 */
		storage_partition: partition@d4000 {
			label = "storage";
			reg = <0x000d4000 0x00020000>;
		};

		boot_partition: partition@f4000 {
			label = "adafruit_boot";
			reg = <0x000f4000 0x0000c000>;
		};
	};
};